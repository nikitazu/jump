package shell

// Bash is the bash shell integration.
var PowerShell = Shell(`# Put the line below in ~\Documents\WindowsPowerShell\profile.ps1:
#
#   jump.exe shell powershell | Out-String | Invoke-Expression
#
# The following lines are autogenerated:

# TODO: provide PowerShell command
#
# __jump_prompt_command() {
#   local status=$?
#   jump chdir && return $status
# }

# Completes current jump command
#   returns true if current prompt starts with jump command
#       and false if not
#
function __jump_hint {
  [CmdletBinding()]
  param (
    [Parameter(Mandatory=$True)]
    [String]
    $Line
  )
  $jumpCommand = "{{.Bind}} "
  $isJumping = $Line.StartsWith($jumpCommand)
  if ($isJumping) {
    $terms = $Line.Substring(2)
    $hint = jump hint $terms
    [Microsoft.PowerShell.PSConsoleReadLine]::Replace($jumpCommand.Length, ($Line.Length - $jumpCommand.Length), $hint)
  }
  return $isJumping
}

# Performs the jump to the specified search $Terms.
#
function {{.Bind}} {
  [CmdletBinding()]
  param (
    [Parameter(
      Mandatory=$False,
      ValueFromPipeline=$True,
      ValueFromPipelineByPropertyName=$True,
      ValueFromRemainingArguments=$true
    )]
    [String[]]
    $Terms
  )
  $dir = jump.exe cd $Terms
  if (Test-Path $dir -PathType Container) {
    Set-Location $dir
  }
}

# TODO: provide PowerShell command
#
# [[ "$PROMPT_COMMAND" =~ __jump_prompt_command ]] || {
#   PROMPT_COMMAND="__jump_prompt_command;$PROMPT_COMMAND"
# }

# Hook into auto-completion to support jump
#
$parameters = @{
  Key = 'Tab'
  BriefDescription = 'JumpAutoComplete'
  LongDescription = 'Auto-completes with support for Jump command.'
  ScriptBlock = {
    param($key, $arg)

    $line = $null
    $cursor = $null
    [Microsoft.PowerShell.PSConsoleReadLine]::GetBufferState(
      [ref]$line,
      [ref]$cursor
    )

    if ($line -And -Not (__jump_hint($line)) ) {
      [Microsoft.PowerShell.PSConsoleReadLine]::TabCompleteNext($key, $line);
    }
  }
}
Set-PSReadLineKeyHandler @parameters
`)
